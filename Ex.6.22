//PROGAMMING EXERCISE 6.22
/*(Math: approximate the square root) There are several techniques for implementing
the sqrt method in the Math class. One such technique is known as the
Babylonian method. It approximates the square root of a number, n, by repeatedly
performing a calculation using the following formula:
nextGuess = (lastGuess + n / lastGuess) / 2
When nextGuess and lastGuess are almost identical, nextGuess is the
approximated square root. The initial guess can be any positive value (e.g., 1).
This value will be the starting value for lastGuess. If the difference between
nextGuess and lastGuess is less than a very small number, such as 0.0001,
you can claim that nextGuess is the approximated square root of n. If not, next-
Guess becomes lastGuess and the approximation process continues. Implement
the following method that returns the square root of n.*/


import java.util.*;

public class Ex22 {
	
	private static Scanner input;

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		input = new Scanner(System.in);
		System.out.print("Enter a number: ");
		long n = input.nextLong();
		System.out.print("The square root of " + n
				+ " is ");
		System.out.printf("%.5f", sqrt(n));
	}
	
	public static double sqrt(long n){
		
		double sqrt = 0;
		double lastGuess = 1;
		double nextGuess =(lastGuess + n / lastGuess)/2;
		double diff = lastGuess%nextGuess;
			
		while(diff > 0.0001){
			lastGuess = nextGuess;
		    nextGuess =(lastGuess + n / lastGuess)/2;
		    diff = lastGuess%nextGuess;
		    		    	    		    
		}
		sqrt = nextGuess;		
		return sqrt;
	}
	

}
